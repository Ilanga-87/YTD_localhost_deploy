###########
# BUILDER #
###########

# pull official base image
FROM python:3.10.8-alpine as builder

# set work directory
WORKDIR /ytdmp3

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PATH "$PATH:/mnt/d/PyCharm/ytd/YTD_deploy_1509"

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8==3.9.2
COPY . .
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /ytdmp3/wheels -r requirements.txt
# RUN pip install -U youtube-dl
RUN apk update && apk upgrade && apk add ffmpeg


#########
# FINAL #
#########

# pull official base image
FROM python:3.10.8-alpine

# create directory for the deploy user
RUN mkdir -p /home/deploy

# create the deploy user
RUN addgroup -S deploy && adduser -S deploy -G deploy

# create the appropriate directories
ENV HOME=/home/deploy
ENV APP_HOME=/home/deploy/ytd
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/uploads && mkdir $APP_HOME/uploads/audio
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /ytdmp3/wheels /wheels
COPY --from=builder /ytdmp3/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the deploy user
RUN chown -R deploy:deploy $APP_HOME

# change to the deploy user
USER deploy

# run entrypoint.prod.sh
ENTRYPOINT ["/home/deploy/ytd/entrypoint.prod.sh"]